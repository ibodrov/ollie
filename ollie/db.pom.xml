<project>
  <properties>
    <db.image>library/postgres:10.4-alpine</db.image>
    <db.baseDir>${project.build.directory}/db</db.baseDir>
    <db.changeLogPath>com/walmartlabs/concord/server/db/liquibase.xml</db.changeLogPath>
    <db.host>localhost</db.host>
    <db.username>postgres</db.username>
    <db.password>q1</db.password>
    <!-- Dependency versions -->
    <postgres.version>42.2.5</postgres.version>
    <jooq.version>3.11.11</jooq.version>
    <liquibase.version>3.5.1</liquibase.version>
    <!-- Plugin versions -->
    <docker.plugin.version>0.23.0</docker.plugin.version>
    <build.helper.plugin.version>3.0.0</build.helper.plugin.version>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${postgres.version}</version>
    </dependency>
    <dependency>
      <groupId>org.jooq</groupId>
      <artifactId>jooq</artifactId>
      <version>${jooq.version}</version>
    </dependency>
    <dependency>
      <groupId>org.liquibase</groupId>
      <artifactId>liquibase-core</artifactId>
      <version>${liquibase.version}</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>${build.helper.plugin.version}</version>
        <executions>
          <execution>
            <id>reserve-ports</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>reserve-network-port</goal>
            </goals>
            <configuration>
              <portNames>
                <portName>db.port</portName>
              </portNames>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>io.fabric8</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>${docker.plugin.version}</version>
        <extensions>true</extensions>
        <executions>
          <execution>
            <id>start</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <images>
            <image>
              <name>${db.image}</name>
              <alias>db</alias>
              <run>
                <ports>
                  <port>${db.port}:5432</port>
                </ports>
                <env>
                  <POSTGRES_PASSWORD>${db.password}</POSTGRES_PASSWORD>
                </env>
                <wait>
                  <log>(?s).*ready for start up.*ready to accept connections.*</log>
                  <time>60000</time>
                </wait>
              </run>
            </image>
          </images>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.liquibase</groupId>
        <artifactId>liquibase-maven-plugin</artifactId>
        <version>${liquibase.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>update</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <changeLogFile>src/main/resources/${db.changeLogPath}</changeLogFile>
          <driver>org.postgresql.Driver</driver>
          <url>jdbc:postgresql://${db.host}:${db.port}/postgres</url>
          <username>${db.username}</username>
          <password>${db.password}</password>
          <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jooq</groupId>
        <artifactId>jooq-codegen-maven</artifactId>
        <version>${jooq.version}</version>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <logging>WARN</logging>
          <jdbc>
            <driver>org.postgresql.Driver</driver>
            <url>jdbc:postgresql://${db.host}:${db.port}/postgres</url>
            <user>${db.username}</user>
            <password>${db.password}</password>
          </jdbc>
          <generator>
            <database>
              <name>org.jooq.meta.postgres.PostgresDatabase</name>
              <inputSchema>public</inputSchema>
              <includes>.*</includes>
              <excludes>DATABASECHANGELOG.*</excludes>
            </database>
            <target>
              <packageName>com.walmartlabs.concord.server.jooq</packageName>
              <directory>target/generated-sources/jooq</directory>
            </target>
            <generate>
              <deprecationOnUnknownTypes>false</deprecationOnUnknownTypes>
            </generate>
          </generator>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
